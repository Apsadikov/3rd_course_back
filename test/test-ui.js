// Generated by Selenium IDE
require('geckodriver')
const { Builder, By} = require('selenium-webdriver')
const assert = require('assert')

async function sleep(msec) { return new Promise(resolve => setTimeout(resolve, msec)); }

describe('test', function() {
  this.timeout(30000)
  let driver
  let vars
  before(async function() {
    driver = await new Builder().forBrowser('firefox').build()
    vars = {}
  })
  after(async function() {
    await driver.quit();
  })
  it('register from auth', async function() {
    await driver.get("http://localhost:63342/arch-front/auth.html")
    await sleep(1000)
    await driver.findElement(By.xpath("//*[text()[contains(.,'Registration')]]")).click();
    await sleep(3000)
    assert.strictEqual(await driver.getCurrentUrl(), 'http://localhost:63342/arch-front/registration.html');
  })
  it('wrong-auth', async function() {
    await driver.get("http://localhost:63342/arch-front/auth.html")
    await sleep(3000)
    await driver.findElement(By.id("username")).click()
    await driver.findElement(By.id("username")).sendKeys("qweegrggrew")
    await driver.findElement(By.id("password")).click()
    await driver.findElement(By.id("password")).sendKeys("qwegrewreg")
    await driver.findElement(By.css("input:nth-child(3)")).click()
    await sleep(3000)
    assert.strictEqual(await driver.getCurrentUrl(), 'http://localhost:63342/arch-front/auth.html');
  })
  it('register', async function() {
    await driver.get("http://localhost:63342/arch-front/registration.html")
    await driver.findElement(By.id("username")).click()
    await driver.findElement(By.id("username")).sendKeys("ttt")
    await driver.findElement(By.id("email")).click()
    await driver.findElement(By.id("email")).sendKeys("ttt@mail.ru")
    await driver.findElement(By.id("password")).click()
    await driver.findElement(By.id("password")).sendKeys("ttt")
    await driver.findElement(By.css("input:nth-child(4)")).click()
    await sleep(3000)
    assert.strictEqual(await driver.getCurrentUrl(), 'http://localhost:63342/arch-front/auth.html');
  })
  it('auth', async function() {
    await driver.get("http://localhost:63342/arch-front/auth.html")
    await driver.findElement(By.id("username")).click()
    await driver.findElement(By.id("username")).sendKeys("ttt")
    await driver.findElement(By.id("password")).click()
    await driver.findElement(By.id("password")).sendKeys("ttt")
    await driver.findElement(By.css("input:nth-child(3)")).click()
    await sleep(3000)
    assert.strictEqual(await driver.getCurrentUrl(), 'http://localhost:63342/arch-front/index.html');
  })
  it('add string', async function() {
    await driver.get("http://localhost:63342/arch-front/index.html")
    await driver.findElement(By.id("input")).click()
    await driver.findElement(By.id("input")).sendKeys("string")
    await driver.findElement(By.css("input:nth-child(3)")).click()
    await sleep(3000)
    var categories = await driver.findElement(By.id("categories")).getText()
    assert.strictEqual(categories, 'plain/text');
  })
  it('delete string', async function() {
    await driver.get("http://localhost:63342/arch-front/index.html")
    await driver.findElement(By.linkText("plain/text")).click()
    await sleep(3000)
    var categories = await driver.findElement(By.id("categories")).getText()
    assert.notStrictEqual(categories, 'plain/text');
  })
  it('add file', async function() {
    await driver.get("http://localhost:63342/arch-front/index.html")
    var fileInput = By.css("input[type=file]");
    var filePath = "C:\\Users\\Гульназ\\Pictures\\Screenshots\\8.1.png";
    await driver.findElement(fileInput).sendKeys(filePath);
    await driver.findElement(By.css("input:nth-child(3)")).click()
    await sleep(6000)
    var categories = await driver.findElement(By.id("categories")).getText()
    assert.strictEqual(categories, 'image/png');
  })
})
